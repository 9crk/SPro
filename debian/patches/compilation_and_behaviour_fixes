Description: Compilation and behaviour fixes.
 The patch fix several compilation issues (expecially for Windows).
 The SPro behaviour is modified so that the files generated on a 32bit
 or a 64bit little-endian architectures are compatible. The reading
 behaviour of 8bit PCM and 32bit PCM files is also changed so that
 features evaluated on those files can be compared with features
 evaluated on 16bit PCM files (8bit and 32bit files are scaled before
 features estimation).
 .
 spro (5.0-1) unstable; urgency=low
 .
   * New upstream release.
Author: Giulio Paci <giuliopaci@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

Index: b/fft.c
===================================================================
--- a/fft.c
+++ b/fft.c
@@ -33,7 +33,7 @@
    ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.
-*/
+ */
 
 /*
  * FFT signal analysis.
@@ -53,7 +53,7 @@
 /* ----- FFT and DCT global variables ----- */
 /* ---------------------------------------- */
 static float *w1c = NULL, *w3c = NULL;
-static long *jx0 = NULL;
+static int *jx0 = NULL;
 static unsigned long _fftn = 0;
 static int _fftm = 0;
 static float *_fftbuf = NULL;
@@ -107,7 +107,7 @@
       return(SPRO_ALLOC_ERR);
     }
     
-    if ((jx0 = (long *)realloc(jx0, npts * sizeof(long) / 3)) == NULL) {
+    if ((jx0 = (int *)realloc(jx0, npts * sizeof(int) / 3)) == NULL) {
       fprintf(stderr, "[SPro error %d] FFTInit(): cannot allocate FFT kernel", SPRO_ALLOC_ERR);
       free(_fftbuf); free(w1c); free(w3c);
       return(SPRO_ALLOC_ERR);
Index: b/sig.c
===================================================================
--- a/sig.c
+++ b/sig.c
@@ -33,7 +33,7 @@
    ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.
-*/
+ */
 
 /*
  * Signal I/O routines.
@@ -77,7 +77,7 @@
 #ifdef SPHERE
 # include <sp/sphere.h>
 #endif
-#include <sptables.h>  /* -> for Alaw and ulaw conversions */
+#include "spro/sptables.h"  /* -> for Alaw and ulaw conversions */
 
 /* --------------------------------------------- */
 /* ----- spsig_t *sig_alloc(unsigned long) ----- */
@@ -256,7 +256,7 @@
     sig_stream_close(p);
     return(NULL);
   }
-
+
   /* sanity check for malformed wave files */
   if (p->nchannels == 0 || p->nbps == 0 || p->Fs == 0.0) {
     fprintf(stderr, "sig_stream_open(): invalid header values in input signal stream %s (wrong format?)\n", (name) ? (name) : "stdin");
@@ -547,19 +547,19 @@
 {
   struct {
     char riff[4];                 /* String 'RIFF' without \0                */
-    long totsize;                 /* Total file size - 8                     */
+    int32_t totsize;                 /* Total file size - 8                     */
     char wave[4];                 /* String 'WAVE' without \0                */
     char fmtstr[4];               /* String 'fmt_' without \0                */
-    long dum1;                    /* Length of format chunk (0x10)           */
+    int32_t dum1;                    /* Length of format chunk (0x10)           */
     short dum2;                   /* Always 0x01                             */
     short numchans;               /* Number of channels                      */
-    long Fs;                      /* Sample rate (in Hz)                     */
-    long nbytespersec;            /* number of bytes/seconde                 */
+    int32_t Fs;                      /* Sample rate (in Hz)                     */
+    int32_t nbytespersec;            /* number of bytes/seconde                 */
     short nbytespersample;        /* number of bytes/sample                  */
     /* (1=8 bit mono, 2=8 bit stereo or 16 bit mono, 4= 16 bit stereo)   */
     short nbitspersample;         /* number of bits/samples                  */
     char data[4];                 /* string 'data' without \0                */
-    unsigned long datsize;        /* number of data bytes (not samples)      */
+    uint32_t datsize;        /* number of data bytes (not samples)      */
   } hdr;
 
   /* open input file */
@@ -585,9 +585,9 @@
   
   if (f->swap) {
     sp_swap(&(hdr.numchans), sizeof(short));
-    sp_swap(&(hdr.Fs), sizeof(long));
+    sp_swap(&(hdr.Fs), sizeof(hdr.Fs));
     sp_swap(&(hdr.nbytespersample), sizeof(short));
-    sp_swap(&(hdr.datsize), sizeof(long));
+    sp_swap(&(hdr.datsize), sizeof(hdr.datsize));
   }
 
   if (strncmp(hdr.riff, "RIFF", 4) != 0 || strncmp(hdr.wave, "WAVE", 4)) {
@@ -778,7 +778,7 @@
 /* ----- double getsample(void *, unsigned long, unsigned short) ----- */
 /* ------------------------------------------------------------------- */
 /*
- * Return n'th sample value assuming m bytes samples.
+ * Return n'th sample value assuming m bytes samples. The sample will be rescaled to PCM Signed 16bit range.
  */
 double getsample(void *p, unsigned long n, unsigned short m)
 {
@@ -787,12 +787,16 @@
   switch(m) {
   case 1:
     v = (double)(*((char *)p+n));
+    v /= 255.0;
+    v *= 32677.0;
     break;
   case 2:
     v = (double)*((short *)p+n);
     break;
   case 4:
     v = (double)*((long *)p+n);
+    v /= 2147483647.0;
+    v *= 32677.0;
   default:
     v = 0.0;
   }
Index: b/spf.c
===================================================================
--- a/spf.c
+++ b/spf.c
@@ -33,7 +33,7 @@
    ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.
-*/
+ */
 
 /*
  * Feature related routines.
@@ -329,7 +329,7 @@
  * Open input feature stream. Return a pointer to the stream or NULL
  * in case of error.
  */
-spfstream_t *spf_input_stream_open(const char *fn, long flag, size_t nbytes)
+spfstream_t *spf_input_stream_open(const char *fn, int32_t flag, size_t nbytes)
 {
   spfstream_t *s;
   unsigned short dim, idx[9];
@@ -357,7 +357,7 @@
       spf_stream_close(s);
       return(NULL);
     }
-    if ((s->f = fopen(fn, "r")) == NULL) {
+    if ((s->f = fopen(fn, "rb")) == NULL) {
       fprintf(stderr, "spf_input_stream_open(): cannot open input file %s\n", fn);
       spf_stream_close(s);
       return(NULL);
@@ -373,14 +373,14 @@
     return(NULL);
   }
   
-  if (fread(&(s->idim), SIZEOF_SHORT, 1, s->f) != 1 || fread(&(s->iflag), SIZEOF_LONG, 1, s->f) != 1 || fread(&(s->Fs), sizeof(float), 1, s->f) != 1) {
+  if (fread(&(s->idim), SIZEOF_SHORT, 1, s->f) != 1 || fread(&(s->iflag), sizeof(int32_t), 1, s->f) != 1 || fread(&(s->Fs), sizeof(float), 1, s->f) != 1) {
     fprintf(stderr, "spf_header_read(): cannot read fixed header\n");
     spf_stream_close(s);
     return(NULL);
   }
 #ifdef WORDS_BIGENDIAN
   sp_swap(&(s->idim), SIZEOF_SHORT);
-  sp_swap(&(s->iflag), SIZEOF_LONG);
+  sp_swap(&(s->iflag), sizeof(int32_t));
   sp_swap(&(s->Fs), sizeof(float));
 #endif
 
@@ -419,12 +419,12 @@
  * Open output feature stream. Return a pointer to the stream or NULL
  * in case of error.
  */
-spfstream_t *spf_output_stream_open(const char *fn, unsigned short idim, long iflag, 
-				    long cflag, float frate, const struct spf_header_field *vh, size_t nbytes)
+spfstream_t *spf_output_stream_open(const char *fn, unsigned short idim, int32_t iflag,
+				    int32_t cflag, float frate, const struct spf_header_field *vh, size_t nbytes)
 {
   spfstream_t *s;
   unsigned short dim, idx[9];
-  long flag;
+  int32_t flag;
   float rate;
 
   if ((s = (spfstream_t *)malloc(sizeof(spfstream_t))) == NULL) {
@@ -483,7 +483,7 @@
       spf_stream_close(s);
       return(NULL);
     }
-    if ((s->f = fopen(fn, "w")) == NULL) {
+    if ((s->f = fopen(fn, "wb")) == NULL) {
       fprintf(stderr, "spf_output_stream_open(): cannot open input file %s\n", fn);
       spf_stream_close(s);
       return(NULL);
@@ -505,12 +505,12 @@
   
 #ifdef WORDS_BIGENDIAN
   sp_swap(&dim, SIZEOF_SHORT);
-  sp_swap(&flag, SIZEOF_LONG);
+  sp_swap(&flag, sizeof(flag));
   sp_swap(&rate, sizeof(float));
 #endif
   
   if (fwrite(&dim, SIZEOF_SHORT, 1, s->f) != 1 || 
-      fwrite(&flag, SIZEOF_LONG, 1, s->f) != 1 || 
+      fwrite(&flag, sizeof(flag), 1, s->f) != 1 ||
       fwrite(&rate, sizeof(float), 1, s->f) != 1) {
     fprintf(stderr, "spf_output_stream_open() -- cannot write fixed header to %s\n", (fn) ? (fn) : "stdout"); 
     return(NULL);
@@ -782,9 +782,9 @@
  * Convert a data description string to binary flag, ignoring unkown
  * convertion letters.
  */
-long sp_str_to_flag(const char *str)
+int32_t sp_str_to_flag(const char *str)
 {
-  long flag = 0;
+  int32_t flag = 0;
   const char *p = str;
 
   if (str)
@@ -810,7 +810,7 @@
 /*
  * Transform flag to stream description string.
  */
-char *sp_flag_to_str(long flag, char str[7])
+char *sp_flag_to_str(int32_t flag, char str[7])
 {
   char *p = str;
 
Index: b/scopy.c
===================================================================
--- a/scopy.c
+++ b/scopy.c
@@ -33,7 +33,7 @@
    ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.
-*/
+ */
 
 /*
  * Copy a data file doing the specified convertions. Also do file format
@@ -540,7 +540,7 @@
   FILE *f;
 
   if (strcmp(ofn, "-")) {
-    if ((f = fopen(ofn, "w")) == NULL)
+    if ((f = fopen(ofn, "wb")) == NULL)
       return(NULL);
   }
   else
@@ -999,7 +999,7 @@
   FILE *f;
   void free_trans_mat(transmat_t *);
 
-  if ((f = fopen(fn, "r")) == NULL) {
+  if ((f = fopen(fn, "rb")) == NULL) {
     fprintf(stderr, "scopy error -- cannot open transformation file %s\n", fn);
     return(NULL);
   }
Index: b/configure.in
===================================================================
--- a/configure.in
+++ b/configure.in
@@ -38,7 +38,7 @@
 AC_REVISION($Revision: 151 $)
 AC_PREREQ(2.12)
 AC_CONFIG_AUX_DIR(auxdir)
-AM_INIT_AUTOMAKE(spro, 5.0)
+AM_INIT_AUTOMAKE(spro, 5.0-papyrus)
 AM_CONFIG_HEADER(config.h:config.h.in)
 
 dnl Checks for usefuls programs (like a compiler, a precompiler, a linker...)
@@ -65,6 +65,7 @@
 dnl defined sizeof standard types
 AC_CHECK_SIZEOF(char)
 AC_CHECK_SIZEOF(short)
+AC_CHECK_SIZEOF(int)
 AC_CHECK_SIZEOF(long)
 
 dnl Checks for header files
Index: b/autogen.sh
===================================================================
--- /dev/null
+++ b/autogen.sh
@@ -0,0 +1,14 @@
+#! /bin/sh
+#
+# $RCSfile$
+# $Author: ggravier $
+# $Date: 2002-07-25 16:14:32 +0200(gio, 25 lug 2002) $
+# $Revision: 61 $
+#
+# Generate all necessary files by running automake, autoconf, ...
+#
+
+aclocal -Iauxdir
+autoheader
+automake -a --force-missing
+autoconf
\ No newline at end of file
Index: b/Makefile.am
===================================================================
--- a/Makefile.am
+++ b/Makefile.am
@@ -43,11 +43,12 @@
 LDADD    = -lm -L. -lspro @sphere_lib@
 INCLUDES = @sphere_include@
 
-include_HEADERS = spro.h sptables.h
+include_HEADERS = spro.h
 lib_LIBRARIES = libspro.a
 noinst_HEADERS = gggetopt.h
+pkginclude_HEADERS = spro/system.h spro/sptables.h
 
-libspro_a_SOURCES = system.h spro.h sptables.h sig.c spf.c header.c misc.c lpc.c convert.c fft.c
+libspro_a_SOURCES = spro.h sig.c spf.c header.c misc.c lpc.c convert.c fft.c
 
 bin_PROGRAMS = scopy slpc slpcep sfbank sfbcep splp
 noinst_PROGRAMS = scompare
@@ -74,4 +75,4 @@
 scompare_DEPENDENCIES = libspro.a
 
 SUBDIRS = doc auxdir test
-EXTRA_DIST = README INSTALL COPYING CHANGES
+EXTRA_DIST = README INSTALL COPYING CHANGES autogen.sh
Index: b/sfbcep.c
===================================================================
--- a/sfbcep.c
+++ b/sfbcep.c
@@ -33,7 +33,7 @@
    ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.
-*/
+ */
 
 /*
  * Convert speech input file to cepstral coefficients output feature file.
@@ -526,7 +526,7 @@
     {"freq-min", required_argument, NULL, 'i'},
     {"freq-max", required_argument, NULL, 'u'},
     {"fft-length", required_argument, NULL, 'b'},
-    {"num-cep", required_argument, NULL, 'p'},
+    {"num-ceps", required_argument, NULL, 'p'},
     {"lifter", required_argument, NULL, 'r'},
     {"energy", no_argument, NULL, 'e'},
     {"scale-energy", required_argument, NULL, 's'},
Index: b/spro.h
===================================================================
--- a/spro.h
+++ b/spro.h
@@ -33,7 +33,7 @@
    ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.
-*/
+ */
 
 /*
  * SPro library header 
@@ -63,7 +63,7 @@
 extern "C" {
 # endif
 
-# include <system.h>
+# include "spro/system.h"
 
      /* ----------------------- */
      /* ----- error codes ----- */
@@ -175,11 +175,11 @@
   float Fs;                     /* frame rate       
                           */
   unsigned short idim;          /* input dimension                            */
-  long iflag;                   /* input stream description                   */
+  int32_t iflag;                   /* input stream description                   */
   unsigned short odim;          /* output dimension                           */
-  long oflag;                   /* output stream description                  */
+  int32_t oflag;                   /* output stream description                  */
 
-  long cflag;                   /* additionnal stream description             */
+  int32_t cflag;                   /* additionnal stream description             */
   unsigned long winlen;         /* global processing window length            */
   float escale;                 /* energy scaling factor                      */
 
@@ -422,7 +422,7 @@
 /* open feature stream in read mode  */
 spfstream_t *spf_input_stream_open(
   const char *,                 /* stream name                                */
-  long,                         /* feature descriptors to add                 */
+  int32_t,                         /* feature descriptors to add                 */
   size_t                        /* I/O buffer maximum size (in bytes)         */
 );
 
@@ -430,8 +430,8 @@
 spfstream_t *spf_output_stream_open(
   const char *,                 /* stream name                                */
   unsigned short,               /* feature dimension                          */
-  long,                         /* input feature description flag             */
-  long,                         /* feature descriptors to add                 */
+  int32_t,                         /* input feature description flag             */
+  int32_t,                         /* feature descriptors to add                 */
   float,                        /* frame sample rate in Hz                    */
   const struct spf_header_field *, /* NULL terminated name/value array        */
   size_t                        /* I/O buffer maximum size (in bytes)         */
@@ -481,13 +481,13 @@
 );
 
 /* convert a feature stream description string to binary flag  */
-long sp_str_to_flag(
+int32_t sp_str_to_flag(
   const char *                  /* data description string                    */
 );
 
 /* convert a feature stream description flag to string  */
 char *sp_flag_to_str(
-  long,                         /* feature stream description                 */
+  int32_t,                         /* feature stream description                 */
   char [7]                      /* output string                              */
 );
 
Index: b/spro/sptables.h
===================================================================
--- /dev/null
+++ b/spro/sptables.h
@@ -0,0 +1,81 @@
+/* Tables for Alaw and Ulaw decoding
+
+   Obtained from the SOX software, respect to Jef Poskanzer.
+
+*/
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+short sp_ulaw_exp_table[256] = {
+	 -32124,-31100,-30076,-29052,-28028,-27004,-25980,-24956,
+	 -23932,-22908,-21884,-20860,-19836,-18812,-17788,-16764,
+	 -15996,-15484,-14972,-14460,-13948,-13436,-12924,-12412,
+	 -11900,-11388,-10876,-10364, -9852, -9340, -8828, -8316,
+	  -7932, -7676, -7420, -7164, -6908, -6652, -6396, -6140,
+	  -5884, -5628, -5372, -5116, -4860, -4604, -4348, -4092,
+	  -3900, -3772, -3644, -3516, -3388, -3260, -3132, -3004,
+	  -2876, -2748, -2620, -2492, -2364, -2236, -2108, -1980,
+	  -1884, -1820, -1756, -1692, -1628, -1564, -1500, -1436,
+	  -1372, -1308, -1244, -1180, -1116, -1052,  -988,  -924,
+	   -876,  -844,  -812,  -780,  -748,  -716,  -684,  -652,
+	   -620,  -588,  -556,  -524,  -492,  -460,  -428,  -396,
+	   -372,  -356,  -340,  -324,  -308,  -292,  -276,  -260,
+	   -244,  -228,  -212,  -196,  -180,  -164,  -148,  -132,
+	   -120,  -112,  -104,   -96,   -88,   -80,   -72,   -64,
+	    -56,   -48,   -40,   -32,   -24,   -16,    -8,     0,
+	  32124, 31100, 30076, 29052, 28028, 27004, 25980, 24956,
+	  23932, 22908, 21884, 20860, 19836, 18812, 17788, 16764,
+	  15996, 15484, 14972, 14460, 13948, 13436, 12924, 12412,
+	  11900, 11388, 10876, 10364,  9852,  9340,  8828,  8316,
+	   7932,  7676,  7420,  7164,  6908,  6652,  6396,  6140,
+	   5884,  5628,  5372,  5116,  4860,  4604,  4348,  4092,
+	   3900,  3772,  3644,  3516,  3388,  3260,  3132,  3004,
+	   2876,  2748,  2620,  2492,  2364,  2236,  2108,  1980,
+	   1884,  1820,  1756,  1692,  1628,  1564,  1500,  1436,
+	   1372,  1308,  1244,  1180,  1116,  1052,   988,   924,
+	    876,   844,   812,   780,   748,   716,   684,   652,
+	    620,   588,   556,   524,   492,   460,   428,   396,
+	    372,   356,   340,   324,   308,   292,   276,   260,
+	    244,   228,   212,   196,   180,   164,   148,   132,
+	    120,   112,   104,    96,    88,    80,    72,    64,
+	     56,    48,    40,    32,    24,    16,     8,     0};
+
+short sp_alaw_exp_table[256] = {
+	  -5504, -5248, -6016, -5760, -4480, -4224, -4992, -4736,
+	  -7552, -7296, -8064, -7808, -6528, -6272, -7040, -6784,
+	  -2752, -2624, -3008, -2880, -2240, -2112, -2496, -2368,
+	  -3776, -3648, -4032, -3904, -3264, -3136, -3520, -3392,
+	 -22016,-20992,-24064,-23040,-17920,-16896,-19968,-18944,
+	 -30208,-29184,-32256,-31232,-26112,-25088,-28160,-27136,
+	 -11008,-10496,-12032,-11520, -8960, -8448, -9984, -9472,
+	 -15104,-14592,-16128,-15616,-13056,-12544,-14080,-13568,
+	   -344,  -328,  -376,  -360,  -280,  -264,  -312,  -296,
+	   -472,  -456,  -504,  -488,  -408,  -392,  -440,  -424,
+	    -88,   -72,  -120,  -104,   -24,    -8,   -56,   -40,
+	   -216,  -200,  -248,  -232,  -152,  -136,  -184,  -168,
+	  -1376, -1312, -1504, -1440, -1120, -1056, -1248, -1184,
+	  -1888, -1824, -2016, -1952, -1632, -1568, -1760, -1696,
+	   -688,  -656,  -752,  -720,  -560,  -528,  -624,  -592,
+	   -944,  -912, -1008,  -976,  -816,  -784,  -880,  -848,
+	   5504,  5248,  6016,  5760,  4480,  4224,  4992,  4736,
+	   7552,  7296,  8064,  7808,  6528,  6272,  7040,  6784,
+	   2752,  2624,  3008,  2880,  2240,  2112,  2496,  2368,
+	   3776,  3648,  4032,  3904,  3264,  3136,  3520,  3392,
+	  22016, 20992, 24064, 23040, 17920, 16896, 19968, 18944,
+	  30208, 29184, 32256, 31232, 26112, 25088, 28160, 27136,
+	  11008, 10496, 12032, 11520,  8960,  8448,  9984,  9472,
+	  15104, 14592, 16128, 15616, 13056, 12544, 14080, 13568,
+	    344,   328,   376,   360,   280,   264,   312,   296,
+	    472,   456,   504,   488,   408,   392,   440,   424,
+	     88,    72,   120,   104,    24,     8,    56,    40,
+	    216,   200,   248,   232,   152,   136,   184,   168,
+	   1376,  1312,  1504,  1440,  1120,  1056,  1248,  1184,
+	   1888,  1824,  2016,  1952,  1632,  1568,  1760,  1696,
+	    688,   656,   752,   720,   560,   528,   624,   592,
+	    944,   912,  1008,   976,   816,   784,   880,   848};
+
+#ifdef __cplusplus
+}
+#endif
Index: b/spro/system.h
===================================================================
--- /dev/null
+++ b/spro/system.h
@@ -0,0 +1,108 @@
+/******************************************************************************/
+/*                                                                            */
+/*                                system.h                                    */
+/*                                                                            */
+/*                               SPro Library                                 */
+/*                                                                            */
+/* Guig                                                             Sep. 2002 */
+/* -------------------------------------------------------------------------- */
+/*
+   $Author: guig $
+   $Date: 2010-11-09 16:57:22 +0100 (Tue, 09 Nov 2010) $
+   $Revision: 151 $
+*/
+/*
+   Copyright (C) 1997-2010 Guillaume Gravier (guig@irisa.fr)
+
+   Permission is hereby granted, free of charge, to any person
+   obtaining a copy of this software and associated documentation
+   files (the "Software"), to deal in the Software without
+   restriction, including without limitation the rights to use, copy,
+   modify, merge, publish, distribute, sublicense, and/or sell copies
+   of the Software, and to permit persons to whom the Software is
+   furnished to do so, subject to the following conditions:
+
+   The above copyright notice and this permission notice shall be
+   included in all copies or substantial portions of the Software.
+
+   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+   NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
+   BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
+   ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+   CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+   SOFTWARE.
+*/
+
+/*
+ * System dependent includes and defines.
+ */
+
+#ifndef _system_h_
+# define _system_h_
+
+# ifdef HAVE_CONFIG_H
+#  include <config.h>
+# endif
+
+# include <stdio.h>
+# include <stdint.h>
+
+/* stdlib stuff */
+# if STDC_HEADERS
+#  include <stdlib.h>
+#  include <stddef.h>
+#  include <stdarg.h>
+# else
+#  if HAVE_STDLIB_H
+#   include <stdlib.h>
+#  endif
+# endif
+
+# if defined STDC_HEADERS || defined _LIBC
+#   include <stdlib.h>
+# elif defined HAVE_MALLOC_H
+#   include <malloc.h>
+# endif
+
+# if HAVE_UNISTD_H
+#  include <unistd.h>
+# endif
+
+/* string stuff */
+# if HAVE_STRING_H
+#  if !STDC_HEADERS && HAVE_MEMORY_H
+#   include <memory.h>
+#  endif
+#  include <string.h>
+# endif
+
+/* mathematics */
+# if HAVE_MATH_H
+#  include <math.h>
+# endif
+
+/* limits */
+# if HAVE_LIMITS_H
+#  include <limits.h>
+# endif
+/* some systems (at least mine) do not define properly the following limits.... */
+# ifndef FLT_MIN
+#  define FLT_MIN 1.17549435E-38F
+# endif
+# ifndef FLT_MAX
+#  define FLT_MAX 3.40282347e+38F
+# endif
+# ifndef DBL_MIN
+#  define DBL_MIN 2.2250738585072014E-308
+# endif
+# ifndef DBL_MAX
+#  define DBL_MAX 1.7976931348623157E+308
+# endif
+
+# if HAVE_SYS_TYPES_H
+#  include <sys/types.h>
+# endif
+
+#endif /* _system_h_ */
